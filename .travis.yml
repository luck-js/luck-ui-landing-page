language: node_js
node_js:
- '16.17.0'
install:
  # We use "force" because upstream dependency conflict isn't fixed
  - "npm install --force"
env:
  global:
  - DEV_IMAGE_NAME=luckjs/ts-luck-ui-landing-page
  - DEV_CONTAINER_NAME=luck-ui-landing-page_develop
  - DEV_VIRTUAL_HOST=testdevelop.luck.org.pl

  - PROD_IMAGE_NAME=luckjs/luck-ui-landing-page
  - PROD_CONTAINER_NAME=luck-ui-landing-page_master
  - PROD_VIRTUAL_HOST=luck.org.pl
jobs:
  include:
  - &build
    stage: build
    services:
      - docker
    script:
      - docker build --build-arg VIRTUAL_HOST=$VIRTUAL_HOST --build-arg SHOULD_SHOW_DRAFT=$SHOULD_SHOW_DRAFT --build-arg TRACKING_ID=$TRACKING_ID --build-arg CLIENT_URL=$CLIENT_URL --build-arg CMS_USERNAME=$CMS_USERNAME --build-arg CMS_PASSWORD=$CMS_PASSWORD --build-arg ROLLBAR_ACESS_TOKEN=$ROLLBAR_ACESS_TOKEN . -t $IMAGE_NAME
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - docker push $IMAGE_NAME
    if: branch = develop
    env:
      - IMAGE_NAME=$DEV_IMAGE_NAME
      - SHOULD_SHOW_DRAFT=true
      - VIRTUAL_HOST=$DEV_VIRTUAL_HOST

  - <<: *build
    if: branch = master OR tag =~ ^v.*$
    env:
     - IMAGE_NAME=$PROD_IMAGE_NAME
     - SHOULD_SHOW_DRAFT=false
     - VIRTUAL_HOST=$PROD_VIRTUAL_HOST

  - &deploy
    stage: deploy
    before_deploy:
      - openssl aes-256-cbc -K $encrypted_45457958fdd0_key -iv $encrypted_45457958fdd0_iv
        -in .travis/id_rsa.enc -out .travis/id_rsa -d
      - eval "$(ssh-agent -s)"
      - cp .travis/id_rsa ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa
      - ssh-add ~/.ssh/id_rsa
      - chmod 700 ~/.ssh
      - ssh-keyscan $HOST_IP > ~/.ssh/known_hosts
    script: skip
    if: branch = develop
    env:
      - IMAGE_NAME=$DEV_IMAGE_NAME
      - CONTAINER_NAME=$DEV_CONTAINER_NAME
      - VIRTUAL_HOST=$DEV_VIRTUAL_HOST
    deploy:
      - provider: script
        skip_cleanup: true
        script: bash .travis/deploy.sh $HOST_IP $DOCKER_PASSWORD $DOCKER_USERNAME $IMAGE_NAME $CONTAINER_NAME
        on:
          branch: develop


  - <<: *deploy
    if: branch = master
    env:
      - IMAGE_NAME=$PROD_IMAGE_NAME
      - CONTAINER_NAME=$PROD_CONTAINER_NAME
      - VIRTUAL_HOST=$PROD_VIRTUAL_HOST
    deploy:
      - provider: script
        skip_cleanup: true
        script: bash .travis/deploy.sh $HOST_IP $DOCKER_PASSWORD $DOCKER_USERNAME $IMAGE_NAME $CONTAINER_NAME
        on:
          branch: master

